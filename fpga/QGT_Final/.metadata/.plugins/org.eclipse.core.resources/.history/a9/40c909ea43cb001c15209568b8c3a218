#include <stdio.h>
#include "comblock.h"
#include "platform.h"
#include "xil_printf.h"
#include "sleep.h"
#include "xparameters.h"


int main()
{
    init_platform();
	short int ax1, ay2, ax3, bx1, by2, bx3;
	int p_00, p_01, p_10, p_11;

	ax1 = 1;
	ay2 = 2;
	ax3 = 3;
	bx1 = 14;
	by2 = 15;
	bx3 = 16;

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG0, (ax1));
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG1, (ay2));
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, (ax3));
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, (bx1));
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG4, (by2));
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG5, (bx3));

    sleep(10);

    p_00 = (cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG0)&0xFFFF);
    p_01 = (cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG1)&0xFFFF);
    p_10 = (cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG2)&0xFFFF);
    p_11 = (cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG3)&0xFFFF);

    sleep(1);

    printf("P = [%d, %d, %d, %d]", p_00, p_01, p_10, p_11);

    cleanup_platform();
    return 0;
}
