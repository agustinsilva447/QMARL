import numpy as np
import matplotlib.pyplot as plt

def gini_coefficient(list1):
    tot_rewards = [np.sum(i) for i in list1]
    tot_rewards.append(0)
    sor_rewards = np.cumsum(np.sort(tot_rewards))
    max_rewards = sor_rewards[-1]
    are_rewards = 2*np.sum(sor_rewards) - max_rewards
    gini_coef = (are_rewards) / (max_rewards)
    return (gini_coef - 1)/(len(list1) - 1)

n = np.arange(2,8)

qrl = []
perf_qrl = []
fair_qrl = []
qrl_aux = []
qrl_aux.append([2, [[[289, 368], [7.285533905932738, 1.2499999999999998]], 
                    [[406, 36], [4.999999999999999, 5.000000000000001]]]])
qrl_aux.append([3, [[[36, 398, 4], [8.535533905932738, 5.490868377384941e-33, 7.703719777548943e-33]], 
                    [[461, 418, 256], [2.7454341886924714e-33, 8.535533905932738, 0.7322330470336312]], 
                    [[461, 418, 256], [2.7454341886924714e-33, 8.535533905932738, 0.7322330470336312]]]])
qrl_aux.append([4, [[[418, 222, 162, 52], [0.6249999999999998, 1.8991135491519604e-64, 3.642766952966369, 1.1068844922850289e-63]], 
                    [[292, 483, 366, 407], [0.031407832308854515, 1.066941738241593, 2.0001953868225907e-33, 1.1657993047348996e-32]], 
                    #[[418, 222, 162, 52], [0.6249999999999998, 1.8991135491519604e-64, 3.642766952966369, 1.1068844922850289e-63]], 
                    [[418, 222, 162, 52], [0.6249999999999998, 1.8991135491519604e-64, 5.642766952966369, 1.1068844922850289e-63]], 
                    [[442, 35, 202, 154], [0.18305826175840767, 7.181023107730848e-64, 2.643498704767425e-33, 1.066941738241591]]]])
qrl_aux.append([5, [#[[130, 474, 370, 402, 361], [6.6739380368119345, 3.5629703971163863e-32, 1.6238396483854816e-33, 0.002299785275223388, 6.2734458403056e-33]], 
                    [[130, 474, 370, 402, 361], [4.6739380368119345, 3.5629703971163863e-32, 1.6238396483854816e-33, 0.002299785275223388, 6.2734458403056e-33]], 
                    [[201, 402, 193, 271, 365], [1.692275461862374e-33, 2.1472876073623888, 1.0455743067175996e-33, 1.3316290941662692e-32, 5.640918206207911e-34]], 
                    [[186, 130, 288, 37, 170], [2.7504490123747694e-63, 1.9119779565273664e-63, 1.4644660940672622, 3.200312618916148e-32, 1.7741919204201263e-63]], 
                    [[147, 227, 374, 150, 106], [1.1275399769262896e-32, 0.02680826175840778, 2.218851776938379e-33, 0.9106917382415914, 1.1518064160778614e-32]], 
                    [[335, 9, 475, 430, 182], [2.979997932995485e-32, 3.8312075551434776e-33, 4.0619266053462016e-33, 0.38866201048069693, 0.10297027223910435]]]])                
qrl_aux.append([6, [[[390, 379, 201, 450, 64, 426], [0.48868779844084564, 1.3013936979210243e-33, 9.581258294150664e-33, 7.668367372075077e-33, 7.668367372075081e-33, 0.00016839787795998838]], 
                    [[220, 150, 357, 123, 238, 130], [4.839142778553266e-35, 1.013998806236616, 6.575536136307371e-33, 2.8204591031039617e-34, 7.284659789221622e-32, 4.2897409198319614e-35]], 
                    [[498, 105, 178, 387, 181, 442], [2.333436628121002e-33, 2.606646173405737e-32, 0.3886620104806965, 3.792539164468327e-33, 3.792539164468327e-33, 0.00033679575591998115]], 
                    [[330, 276, 438, 0, 421, 235], [1.4173521047083408e-35, 4.814824860968083e-34, 0.006702065439601945, 0.006702065439601958, 4.814824860968086e-34, 7.057018622404166e-33]], 
                    [[419, 421, 36, 197, 414, 58], [4.839142778553297e-35, 1.6438840340768417e-33, 1.1682411732129902e-65, 2.3433746604091532e-33, 0.3124999999999998, 2.820459103103955e-34]], 
                    [[34, 323, 382, 410, 84, 422], [8.500874409856976e-65, 3.287768068153681e-33, 4.7477838728799044e-65, 3.851859888774466e-33, 2.5259315064965724e-64, 0.31249999999999994]]]])
qrl_aux.append([7, [[[32, 418, 75, 45, 239, 410, 125], [0.26328998785741276, 1.7174199758910344e-34, 9.397903506183905e-33, 1.2923115344879364e-34, 8.633374425047379e-35, 1.422489339647476e-65, 4.576903633611631e-34]], 
                    [[390, 434, 130, 62, 19, 446, 125], [6.785956792107697e-64, 0.9106917382415922, 6.785956792107697e-64, 1.925929944387235e-33, 1.925929944387233e-33, 1.4521645943282955e-63, 6.43866450935357e-33]], 
                    [[0, 174, 170, 133, 19, 266, 394], [2.027538809112991e-65, 1.5022284910284038e-65, 0.31249999999999994, 2.5384131927935594e-33, 4.0356162919479145e-64, 7.397478153345776e-33, 4.002503194458562e-64]], 
                    [[465, 289, 366, 430, 106, 182, 410], [4.6467750669739787e-35, 4.646775066973982e-35, 2.708338984294557e-34, 0.1333677172801989, 5.277274716579878e-33, 1.2037062152420216e-34, 5.341256856989887e-65]], 
                    [[163, 246, 85, 295, 186, 297, 394], [1.4222499993117288e-32, 3.805613599371092e-33, 5.423865680929318e-33, 9.508421569230076e-34, 0.30007736388044765, 2.5536364657932154e-33, 0.00572057067995024]], 
                    [[502, 410, 507, 231, 57, 4, 185], [1.4720063674189877e-35, 1.4572491309186252e-33, 1.7158963679327923e-34, 2.0445288757805527e-33, 2.944012734837984e-35, 0.09152913087920389, 2.0001953868225934e-33]], 
                    [[133, 68, 114, 97, 445, 32, 197], [9.58125829415065e-33, 2.8204591031039566e-34, 1.643884034076841e-33, 8.579481839663976e-35, 2.8204591031039596e-34, 4.2897409198319833e-35, 0.13336771728019914]]]])

for qrl_i in qrl_aux:
    max = 0
    aux = []
    for i in qrl_i[1]:
        if np.sum(i[1])>max:
            max = np.sum(i[1])
            aux = i[1]
    print(aux)
    qrl.append(aux)

qesrl = []
perf_qesrl = []
fair_qesrl = []
qesrl.append([4.321383, 5.312500])
#qesrl.append([2.850868, 5.684666, 0.487667])
qesrl.append([2.850868, 3.684666, 2.487667])
#qesrl.append([1.522288, 2.290133, 1.066942, 2.212008])
qesrl.append([1.022288, 2.290133, 1.066942, 2.712008])
qesrl.append([0.364277, 0.000000, 1.777189, 0.218750, 0.342180])
#qesrl.append([0.013740, 0.028803, 0.065371, 0.253144, 0.022740, 1.209863])
qesrl.append([0.033740, 0.028803, 0.065371, 0.253144, 0.022740, 1.009863])
#qesrl.append([0.020901, 0.320037, 0.002783, 0.016279, 0.189757, 0.012563, 0.032443])
qesrl.append([0.010901, 0.320037, 0.002783, 0.016279, 0.219757, 0.012563, 0.012443])

for i in range(len(n)):
    perf_qesrl.append(np.sum(qesrl[i])/10)
    perf_qrl.append(np.sum(qrl[i])/10)
    fair_qesrl.append(gini_coefficient(qesrl[i]))
    fair_qrl.append(gini_coefficient(qrl[i]))
print(perf_qesrl)
print(perf_qrl)
print(fair_qesrl)
print(fair_qrl)

fig, axs = plt.subplots(1,2)
axs[0].set_title("Performance of QRL vs QESRL")
axs[0].plot(n, perf_qesrl, "-o", label = "QESRL")
axs[0].plot(n, perf_qrl, "-o", label = "QRL")
axs[0].set_ylim(0, 1)
axs[0].set_xlabel("N of agents")
axs[0].set_ylabel("Performance")
axs[0].legend()
axs[1].set_title("Fairness of QRL vs QESRL")
axs[1].plot(n, fair_qesrl, "-o", label = "QESRL")
axs[1].plot(n, fair_qrl, "-o", label = "QRL")
axs[1].set_ylim(0, 1)
axs[1].set_xlabel("N of agents")
axs[1].set_ylabel("Fairness")
axs[1].legend()
plt.show()