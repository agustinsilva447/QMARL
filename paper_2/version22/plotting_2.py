import numpy as np
import matplotlib.pyplot as plt

q_noise = [0, 1/1024, 1/512, 1/256, 1/128, 1/64, 1/32, 1/16, 1/8, 1/4, 1/2, 1]

Rewards_2_1  = [9.06855884058258, 4.4543734327214715, 5.493863314785856, 3.0323110913388036, 3.404354251736501, 3.9432549347946915, 4.596056973317913, 4.9002714285664615, 4.8419454556646935, 4.855688285918362, 4.6723059716048985, 4.966646770394885]
Fairness_2_1 = [0.5680472028393578, 0.9555886452824573, 0.9780058402664336, 0.8935926727319947, 0.9755480479040479, 0.997894432411158, 0.9792384256028477, 0.9311895627632077, 0.9868011059383016, 0.9954296520406548, 0.9935537372263927, 0.9939235262093501]
Rewards_2_2  = [9.88186843983406, 5.621410312469192, 4.376010559606313, 6.047574680558443, 4.557396150332642, 3.5870902949941317, 4.392603494946192, 4.417270283161042, 4.666022525202139, 5.020396921491086, 5.042632231748828, 4.691085464856428]
Fairness_2_2 = [0.7382631834060871, 0.9725097678667634, 0.8061083396471256, 0.9081234185602566, 0.9397576734820687, 0.9590477479109473, 0.8737172557656797, 0.9241610454914413, 0.9987678649532082, 0.9746390175365183, 0.9947222025505336, 0.9960772286495265]
Rewards_2_3  = [9.82503258168938, 6.157011224752472, 4.9982363580680405, 3.085767644565323, 4.905072562343437, 4.968734273148412, 3.753504966743663, 5.4166700745123135, 4.806731894948864, 4.9260089159470155, 4.780292733154724, 4.927064030810178]
Fairness_2_3 = [0.813776687208481, 0.9197327838992517, 0.7736648006780594, 0.825451735510098, 0.9961346048856399, 0.8685683562929533, 0.9851435554514048, 0.7116800745569262, 0.9890395259633908, 0.9942895328533458, 0.9942977232628061, 0.9812986248879658]
Rewards_2_4  = [9.749525840034513, 1.8120034636147349, 2.954860922262316, 4.225893796117251, 4.156949290182048, 4.302545023625891, 4.981733749460782, 4.4000814450167685, 4.9845952748177105, 4.992621813214297, 4.765564693305157, 5.041323755396028]
Fairness_2_4 = [0.7893451550405389, 0.6357274266378168, 0.6426132098666938, 0.8707066846815461, 0.9256505808237414, 0.9132161404820498, 0.9731433104140806, 0.9982927907319881, 0.9785232081923189, 0.9858331285619181, 0.9956840440184789, 0.9898377032027268]
Rewards_2_5  = [9.790121013823162, 2.4563476010216236, 3.8058974461386557, 4.282817136470711, 5.1477364449486664, 4.662603002552403, 4.635178201334625, 4.500664777318131, 4.683338882850687, 5.60132022535293, 4.986573722984664, 4.980603277925196]
Fairness_2_5 = [0.7593102142625425, 0.6523853080333812, 0.8776631639505865, 0.8229861305670022, 0.8837436275941343, 0.8948240131996179, 0.9946592420520413, 0.9509263901499622, 0.9444120835815395, 0.724014342504612, 0.9890621902077765, 0.9931497900367321]

rewa_2 = [Rewards_2_1,
          Rewards_2_2,
          Rewards_2_3,
          Rewards_2_4,
          Rewards_2_5]
rew_2 = np.mean(rewa_2, axis=0)

fair_2 = [Fairness_2_1,
          Fairness_2_2,
          Fairness_2_3,
          Fairness_2_4,
          Fairness_2_5]
fai_2 = np.mean(fair_2, axis=0)

max = 0
arg = 0
for i in rewa_2:
    if np.max(i)>max:
        max = np.max(i)
        arg = np.argmax(i)

print(rew_2)        
print("Maximum average reward = {:.3f} for quantum noise with $\gamma$ = {}.".format(max,q_noise[arg]))
"""
fig0, axs = plt.subplots(1,2,figsize=(20,8))
fig0.suptitle("Reward and fairness vs quantum noise.", fontsize=16)
axs[0].set_title("Reward vs quantum noise")
axs[0].plot(q_noise, rew_2,"o-")
axs[0].set_xlabel("Quantum noise")
axs[0].set_ylabel("Average reward")
axs[1].set_title("Fairness vs quantum noise")
axs[1].plot(q_noise, fai_2,"o-")
axs[1].set_xlabel("Average Fairness")
axs[1].set_ylabel("Quantum noise")
plt.show()
"""
plt.title("Reward vs quantum noise (2 players)")
plt.plot(q_noise, rew_2, "o-", label = "noisy")
plt.axhline(y = rew_2[0], color = 'r', linestyle = 'dashed', label = "noiseless")
plt.xlabel("Quantum noise")
plt.ylabel("Average reward")
plt.legend(loc="upper right")
plt.show()