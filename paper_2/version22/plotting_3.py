import numpy as np
import matplotlib.pyplot as plt

q_noise = [0, 1/1024, 1/512, 1/256, 1/128, 1/64, 1/32, 1/16, 1/8, 1/4, 1/2, 1]

Rewards_3_1  = [9.933091526460935, 3.379318782406685, 3.9115137007131775, 3.3127476458770326, 3.2757623150995023, 3.648890636921299, 2.767164132577556, 3.328676939255891, 3.379729190724104, 3.6177252158519284, 3.664890454634613, 3.397575514908302]
Fairness_3_1 = [0.3670131140198151, 0.8983231755425793, 0.8527623856259541, 0.675881729511214, 0.8986649840749766, 0.9303947928774878, 0.8995008547609015, 0.9609257258562244, 0.9608256087818492, 0.9635836951646022, 0.9935884630161554, 0.9231826512650103]
Rewards_3_2  = [9.674972191762672, 3.303744410482437, 2.6157085283685304, 3.699936070864744, 2.150822026904756, 3.47805394605659, 3.644117872125251, 2.817850191673774, 3.145152044935672, 3.646694171932512, 3.692812052989227, 2.6784661316929155]
Fairness_3_2 = [0.38244028017290715, 0.8597087892251924, 0.7883341781550683, 0.9585615542069202, 0.9826521306098328, 0.9125015429025727, 0.9327889758873121, 0.974075706661636, 0.8527631107928971, 0.9937323261048624, 0.9722647270384475, 0.9355027979808556]
Rewards_3_3  = [9.963348138426692, 3.310146318056515, 2.1978835827828047, 3.165003402711848, 3.509795079053902, 3.270060671059175, 3.007958620987998, 3.5436454854054276, 3.4421604870785445, 3.7357785034390623, 3.5715326806747387, 3.687324282763211]
Fairness_3_3 = [0.3420535111322516, 0.8872359369720326, 0.7764914912297136, 0.8703102548573152, 0.9600393081739228, 0.9697047233597299, 0.9587453642599149, 0.9422801343511017, 0.9922915789616932, 0.967635371971231, 0.9692450011875358, 0.9748886544678395]
Rewards_3_4  = [9.970725982038656, 4.058597309753375, 2.996262564480075, 2.787181249160306, 3.75889491389557, 3.4298536903107486, 4.000384592870402, 3.760075831288276, 3.3186549533433283, 3.7477545321410553, 3.6662258332431503, 3.5523769143947934]
Fairness_3_4 = [0.3393067864459127, 0.8347214589451921, 0.7143102631387748, 0.9106961601092823, 0.9017765763885491, 0.9743020125529555, 0.9782859453865239, 0.9813329439237773, 0.9749745524063108, 0.996867565169431, 0.9836184645079279, 0.9921076546306998]
Rewards_3_5  = [9.902749176795709, 2.940780922531932, 2.0412634594367587, 3.6481148183353627, 3.4852369824955245, 2.8582406240025833, 3.5073022235581504, 3.5183973224458263, 2.1923205103801147, 3.4764283889610597, 3.716631416010131, 3.6749190834536156]
Fairness_3_5 = [0.7870018161856706, 0.8595577246677233, 0.9047286073403822, 0.8043509433990035, 0.9695340847980188, 0.9606337889365965, 0.9560846631141271, 0.9617738909699527, 0.8690557715779003, 0.9609472515207291, 0.9924157970011441, 0.9864018231578269]

rewa_3 = [Rewards_3_1,
          Rewards_3_2,
          Rewards_3_3,
          Rewards_3_4,
          Rewards_3_5]
rew_3 = np.mean(rewa_3, axis=0)

fair_3 = [Fairness_3_1,
          Fairness_3_2,
          Fairness_3_3,
          Fairness_3_4,
          Fairness_3_5]
fai_3 = np.mean(fair_3, axis=0)

max = 0
arg = 0
for i in rewa_3:
    if np.max(i)>max:
        max = np.max(i)
        arg = np.argmax(i)
print("Maximum average reward = {:.3f} for quantum noise with $\gamma$ = {}.".format(max,q_noise[arg]))
"""
fig0, axs = plt.subplots(1,2,figsize=(20,8))
fig0.suptitle("Reward and fairness vs quantum noise.", fontsize=16)
axs[0].set_title("Reward vs quantum noise")
axs[0].plot(q_noise, rew_3,"o-")
axs[0].set_xlabel("Quantum noise")
axs[0].set_ylabel("Average reward")
axs[1].set_title("Fairness vs quantum noise")
axs[1].plot(q_noise, fai_3,"o-")
axs[1].set_xlabel("Average Fairness")
axs[1].set_ylabel("Quantum noise")
plt.show()
"""
plt.title("Reward vs quantum noise (3 players)")
plt.plot(q_noise, rew_3, "o-", label = "noisy")
plt.axhline(y = rew_3[0], color = 'r', linestyle = 'dashed', label = "noiseless")
plt.xlabel("Quantum noise")
plt.ylabel("Average reward")
plt.legend(loc="upper right")
plt.show()