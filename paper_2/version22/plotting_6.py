import numpy as np
import matplotlib.pyplot as plt

q_noise = [0, 1/1024, 1/512, 1/256, 1/128, 1/64, 1/32, 1/16, 1/8, 1/4, 1/2, 1]

Rewards_6_1  = [0.4622211311862961, 0.6237958426260429, 0.9669001313393687, 0.9868689409310337, 0.7435512547216966, 0.565562226788081, 0.9617324375256646, 1.2589313745161734, 1.5061228724922289, 1.5754510601056126, 0.7983399609169773, 1.0294225146259557]
Fairness_6_1 = [0.7434376528115585, 0.5511435832301331, 0.8127972894890007, 0.579061913139305, 0.8004072738283977, 0.8251454073558222, 0.7919467205035131, 0.795389796009184, 0.7985862729109254, 0.9062203500977366, 0.8852720940172549, 0.89718266266242]
Rewards_6_2  = [0.8424389555660093, 0.8749838807940525, 0.7148252595660962, 1.5421307961611666, 2.221032930408982, 0.8436307553844508, 1.305686319293754, 1.5720926787722203, 0.679023390871981, 0.5919063761790666, 1.1662935349992103, 0.9897354937416494]
Fairness_6_2 = [0.6984338019704407, 0.5859470893128069, 0.6775093742781773, 0.34246612709441704, 0.8357101959240081, 0.6507806511441504, 0.8686533780950897, 0.8166065570503086, 0.7513461228322927, 0.7440086455772771, 0.9500705213684629, 0.8702755568144771]
Rewards_6_3  = [0.4654141299757339, 1.0062105001048347, 1.0069175168718822, 1.7229403868187032, 1.0469818311004089, 1.7840947891544412, 1.1390120721030021, 0.9788309489358232, 0.9124827670065341, 0.8735210023120956, 0.8829995289670428, 0.7152510409240488]
Fairness_6_3 = [0.8245767439841406, 0.5944678638022795, 0.5221446677405316, 0.5714825915101964, 0.6153158682033808, 0.6935252944027323, 0.6015474476122177, 0.8294497030388196, 0.8907400168962348, 0.9035392345910737, 0.89040263344531, 0.8754854809299456]
Rewards_6_4  = [0.6065073843073863, 1.5758936604862293, 0.7036160280959399, 1.2179816815676854, 1.4755101901991827, 1.5728112276361959, 0.781178001291492, 1.0068389878069832, 0.9110411772278768, 0.7706199192220204, 1.025192613478115, 0.6731875122344609]
Fairness_6_4 = [0.6767708765665468, 0.6157357420715212, 0.6801019411676333, 0.7162887215602922, 0.7857775752017518, 0.7650038111819225, 0.6881805869041622, 0.7204148143181499, 0.9048650165354368, 0.8732064349997716, 0.9409571507427711, 0.7228651661510228]
Rewards_6_5  =  [0.5507375193312465, 1.258044953282163, 1.482319111168538, 1.275317682502567, 1.7370848529406195, 1.790668101150981, 0.7625061860223756, 0.9742827430731499, 0.9356678937298104, 0.8610255466834206, 0.9215672811912119, 0.9604768445762941]
Fairness_6_5 =  [0.718050736052198, 0.7348854100574943, 0.7032308362928358, 0.6148805828136402, 0.5663371172679468, 0.6204411712451, 0.7185091247262496, 0.8368890709559791, 0.7984583389805945, 0.85469643195743, 0.8758169601483192, 0.9027566999358891]

rewa_6 = [Rewards_6_1,
          Rewards_6_2,
          Rewards_6_3,
          Rewards_6_4,
          Rewards_6_5]
rew_6 = np.mean(rewa_6, axis=0)

fair_6 = [Fairness_6_1,
          Fairness_6_2,
          Fairness_6_3,
          Fairness_6_4,
          Fairness_6_5]
fai_6 = np.mean(fair_6, axis=0)

max = 0
arg = 0
for i in rewa_6:
    if np.max(i)>max:
        max = np.max(i)
        arg = np.argmax(i)
print("Maximum average reward = {:.3f} for quantum noise with $\gamma$ = {}.".format(max,q_noise[arg]))
"""
fig0, axs = plt.subplots(1,2,figsize=(20,8))
fig0.suptitle("Reward and fairness vs quantum noise.", fontsize=16)
axs[0].set_title("Reward vs quantum noise")
axs[0].plot(q_noise, rew_6,"o-")
axs[0].set_xlabel("Quantum noise")
axs[0].set_ylabel("Average reward")
axs[1].set_title("Fairness vs quantum noise")
axs[1].plot(q_noise, fai_6,"o-")
axs[1].set_xlabel("Average Fairness")
axs[1].set_ylabel("Quantum noise")
plt.show()
"""
plt.title("Reward vs quantum noise (6 players)")
plt.plot(q_noise, rew_6, "o-", label = "noisy")
plt.axhline(y = rew_6[0], color = 'r', linestyle = 'dashed', label = "noiseless")
plt.xlabel("Quantum noise")
plt.ylabel("Average reward")
plt.legend(loc="upper right")
plt.show()